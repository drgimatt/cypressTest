name: Cypress Parallel Execution

on:
  push:
    branches: [main, test]
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.prepare.outputs.matrix }}
    steps:
      - name: Create Matrix
        id: prepare
        uses: bahmutov/gh-build-matrix@main
        with:
          n: 3

      - name: Print result
        run: echo '${{ steps.prepare.outputs.matrix }}'

  test-split:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Print GitHub Variables
        run: npx @bahmutov/print-env GITHUB

      - name: Print GitHub strategy context ðŸ–¨
        run: echo '${{ toJSON(strategy) }}'

      - name: Run split Cypress tests ðŸ§ª
        uses: cypress-io/github-action@v5
        env:
          SPLIT: ${{ strategy.job-total }}
          SPLIT_INDEX: ${{ strategy.job-index }}
          DEBUG: cypress-split
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Archive code coverage results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report-${{ strategy.job-index }}
          path: cypress/downloads/reports/code-coverage.html

      - name: Archive Cypress screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkout_screenshot-${{ strategy.job-index }}
          path: cypress/screenshots/

  collect-and-deploy:
    needs: test-split
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all code coverage artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: code-coverage-report-*
          path: cypress/downloads/reports/

      - name: Download all screenshots
        uses: actions/download-artifact@v4
        with:
          pattern: checkout_screenshot-*
          path: cypress/screenshots/

      - name: Prepare report file for GitHub Pages
        run: |
          mkdir -p cypress/downloads/reports/
          mv cypress/downloads/reports/code-coverage.html cypress/downloads/reports/index.html || true

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: cypress/downloads/reports/

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
